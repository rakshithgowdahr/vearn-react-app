{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/protectedRoute.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","login","email","password","http","getCurrentUser","localStorage","getItem","jwtDecode","ex","ProtectedRoute","path","Component","component","render","rest","Route","props","Redirect","to","pathname","state","from","location","movieUrl","id","getMovie","movieId","saveMovie","movie","_id","body","deleteMovie","getGenres","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","className","map","item","onClick","key","defaultProps","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","TableBody","renderCell","content","createKey","data","Table","MoviesTable","Link","title","onLike","deleteColumn","onDelete","user","isAdmin","push","movies","Pagination","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","genres","searchQuery","selectedGenre","handleDelete","a","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","Fragment","marginBottom","Customers","Rentals","NotFound","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Input","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","renderSelect","renderInput","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","match","params","mapToViewModel","history","replace","populateGenres","populateMovie","onSubmit","LoginForm","username","setItem","window","Logout","removeItem","register","RegisterForm","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b493b9e5.chunk.js","sourcesContent":["function init(){\r\n\r\n}\r\n\r\nfunction log(error){\r\n    console.error(error);\r\n    \r\n}\r\n\r\nexport default {init, log};","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport {toast} from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error=>{\r\n    const expectedError = error.response && error.response.status >=400 && error.response.status < 500;\r\n    if(!expectedError){\r\n        logger.log(error);\r\n        toast.error(\"An unexpected error occured\");\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt){\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nexport default {\r\n    get:axios.get,\r\n    post:axios.post,\r\n    put:axios.put,\r\n    delete:axios.delete,\r\n    setJwt\r\n}","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndPoint = \"/auth\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport function login(email, password) {\r\n  return http.post(apiEndPoint, { email, password });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect\r\n  } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem\r\n              ? \"list-group-item active text-center\"\r\n              : \"list-group-item text-center\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n//columns: array\r\n//sortColumn: obj\r\n//onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) =>{\r\n        if(column.content) return column.content(item);\r\n        return _.get(item, column.path);\r\n    }\r\n    createKey = (item, column)=>{\r\n        return item._id + (column.path || column.key);\r\n    }\r\n    render() {\r\n        const {data, columns} = this.props; \r\n        return ( <tbody>\r\n            {data.map(item=>\r\n            <tr key={item._id}>{columns.map(column=><td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n            </tr>)}\r\n        </tbody> );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({columns, sortColumn, onSort, data}) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader\r\n        columns={columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n  constructor() {\r\n    super();\r\n    const user = getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      ></Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  console.log(currentPage);\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nconst SearchBox = ({value, onChange}) => {\r\n    return ( \r\n        <input type=\"text\" name=\"query\" className=\"form-control my-3\" placeholder=\"Search...\" \r\n        onChange={e=>onChange(e.currentTarget.value)} />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast(\"This movie has already been deleted\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movie[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              selectedItem={this.state.selectedGenre}\r\n              items={this.state.genres}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New Movies\r\n              </Link>\r\n            )}\r\n            <p>Showing {totalCount} movies in the database</p>\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onSort={this.handleSort}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike}\r\n            ></MoviesTable>\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n\r\n// const filtered =\r\n//   selectedGenre && selectedGenre._id\r\n//     ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n//     : allMovies;\r\n","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return <h1>Customers</h1>;\r\n}\r\n \r\nexport default Customers;","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals.</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <h1>Not Found!!</h1>;\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nconst Input = ({ name, label, error, ...rest  }) => {//value, type, onChange\r\n  //value, type, onChange\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n          <option value=\"\"></option>\r\n              {options.map(option=>(\r\n                  <option key={option._id} value={option._id}>{option.name}</option>\r\n              ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport Joi from \"joi-browser\";\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false\r\n    };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n  renderSelect = (name, label, options) =>{\r\n    const {data, errors} = this.state;\r\n    return (\r\n      <Select\r\n      name={name}\r\n      value={data[name]}\r\n      label={label}\r\n      options={options}\r\n      onChange={this.handleChange}\r\n      error={errors[name]}\r\n      />\r\n    )\r\n  }\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n  async doSubmit() {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { login, getCurrentUser } from \"../services/authService\";\r\nimport Form from \"./common/form\";\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const { data: jwt } = await login(data.username, data.password);\r\n      localStorage.setItem(\"token\", jwt);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/login\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { register } from \"../services/userService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport jwtDecode from \"jwt-decode\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport Navbar from \"./components/navbar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    try {\n      const jwt = localStorage.getItem(\"token\");\n      const user = jwtDecode(jwt);\n      this.setState({ user });\n    } catch (ex) {}\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute\n              path=\"/movies/:id\" component={MovieForm}/>\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect exact from=\"/\" to=\"/movies\"></Redirect>\n            <Redirect to=\"/not-found\"></Redirect>\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}